(window.webpackJsonp=window.webpackJsonp||[]).push([[234],{812:function(s,n,e){"use strict";e.r(n);var a=e(17),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"如何解密本机securecrt保存的密码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何解密本机securecrt保存的密码"}},[s._v("#")]),s._v(" 如何解密本机SecureCRT保存的密码")]),s._v(" "),e("p",[s._v("今天查看一台服务器的，发现登陆不了，可能是防火墙误操作了，需要去机房操作。")]),s._v(" "),e("p",[s._v("之前用securecrt成功登陆过，所以本机的配置文件是保存密码了，需要用python来解密")]),s._v(" "),e("h2",{attrs:{id:"一-查找配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-查找配置文件"}},[s._v("#")]),s._v(" 一.查找配置文件")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://imgoss.xgss.net/picgo/image-20221102132755681.png?aliyun",alt:"image-20221102132755681"}})]),s._v(" "),e("p",[s._v("找到配置文件打开")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://imgoss.xgss.net/picgo/image-20221102132903604.png?aliyun",alt:"image-20221102132903604"}})]),s._v(" "),e("h2",{attrs:{id:"二、安装python3和解密文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、安装python3和解密文件"}},[s._v("#")]),s._v(" 二、安装python3和解密文件")]),s._v(" "),e("p",[s._v("1.安装python：")]),s._v(" "),e("p",[s._v("官网下载 https://www.python.org/downloads/")]),s._v(" "),e("p",[s._v("再编辑文件")]),s._v(" "),e("p",[s._v("参考： https://github.com/HyperSine/how-does-SecureCRT-encrypt-password")]),s._v(" "),e("p",[s._v("SecureCRT 中的密码进行了加密，需要解码才能得到对应的明文，这是使用python解密")]),s._v(" "),e("p",[s._v("使用pip 安装Crypto模块")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("pip3 install pycryptodome\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("编写python解码文件decrypt.py")]),s._v(" "),e("p",[s._v("下载文件： https://raw.githubusercontent.com/HyperSine/how-does-SecureCRT-encrypt-password/master/python3/SecureCRTCipher.py")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("新建文件\n# vim SecureCRTCipher.py\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("内容文件：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("#!/usr/bin/env python3\n#https://github.com/HyperSine/how-does-SecureCRT-encrypt-password\nimport os\nfrom Crypto.Hash import SHA256\nfrom Crypto.Cipher import AES, Blowfish\n\nclass SecureCRTCrypto:\n\n    def __init__(self):\n        '''\n        Initialize SecureCRTCrypto object.\n        '''\n        self.IV = b'\\x00' * Blowfish.block_size\n        self.Key1 = b'\\x24\\xA6\\x3D\\xDE\\x5B\\xD3\\xB3\\x82\\x9C\\x7E\\x06\\xF4\\x08\\x16\\xAA\\x07'\n        self.Key2 = b'\\x5F\\xB0\\x45\\xA2\\x94\\x17\\xD9\\x16\\xC6\\xC6\\xA2\\xFF\\x06\\x41\\x82\\xB7'\n\n    def Encrypt(self, Plaintext : str):\n        '''\n        Encrypt plaintext and return corresponding ciphertext.\n        Args:\n            Plaintext: A string that will be encrypted.\n        Returns:\n            Hexlified ciphertext string.\n        '''\n        plain_bytes = Plaintext.encode('utf-16-le')\n        plain_bytes += b'\\x00\\x00'\n        padded_plain_bytes = plain_bytes + os.urandom(Blowfish.block_size - len(plain_bytes) % Blowfish.block_size)\n\n        cipher1 = Blowfish.new(self.Key1, Blowfish.MODE_CBC, iv = self.IV)\n        cipher2 = Blowfish.new(self.Key2, Blowfish.MODE_CBC, iv = self.IV)\n        return cipher1.encrypt(os.urandom(4) + cipher2.encrypt(padded_plain_bytes) + os.urandom(4)).hex()\n\n    def Decrypt(self, Ciphertext : str):\n        '''\n        Decrypt ciphertext and return corresponding plaintext.\n        Args:\n            Ciphertext: A hex string that will be decrypted.\n        Returns:\n            Plaintext string.\n        '''\n\n        cipher1 = Blowfish.new(self.Key1, Blowfish.MODE_CBC, iv = self.IV)\n        cipher2 = Blowfish.new(self.Key2, Blowfish.MODE_CBC, iv = self.IV)\n        ciphered_bytes = bytes.fromhex(Ciphertext)\n        if len(ciphered_bytes) <= 8:\n            raise ValueError('Invalid Ciphertext.')\n        \n        padded_plain_bytes = cipher2.decrypt(cipher1.decrypt(ciphered_bytes)[4:-4])\n        \n        i = 0\n        for i in range(0, len(padded_plain_bytes), 2):\n            if padded_plain_bytes[i] == 0 and padded_plain_bytes[i + 1] == 0:\n                break\n        plain_bytes = padded_plain_bytes[0:i]\n\n        try:\n            return plain_bytes.decode('utf-16-le')\n        except UnicodeDecodeError:\n            raise(ValueError('Invalid Ciphertext.'))\n\nclass SecureCRTCryptoV2:\n\n    def __init__(self, ConfigPassphrase : str = ''):\n        '''\n        Initialize SecureCRTCryptoV2 object.\n        Args:\n            ConfigPassphrase: The config passphrase that SecureCRT uses. Leave it empty if config passphrase is not set.\n        '''\n        self.IV = b'\\x00' * AES.block_size\n        self.Key = SHA256.new(ConfigPassphrase.encode('utf-8')).digest()\n\n    def Encrypt(self, Plaintext : str):\n        '''\n        Encrypt plaintext and return corresponding ciphertext.\n        Args:\n            Plaintext: A string that will be encrypted.\n        Returns:\n            Hexlified ciphertext string.\n        '''\n        plain_bytes = Plaintext.encode('utf-8')\n        if len(plain_bytes) > 0xffffffff:\n            raise OverflowError('Plaintext is too long.')\n        \n        plain_bytes = \\\n            len(plain_bytes).to_bytes(4, 'little') + \\\n            plain_bytes + \\\n            SHA256.new(plain_bytes).digest()\n        padded_plain_bytes = \\\n            plain_bytes + \\\n            os.urandom(AES.block_size - len(plain_bytes) % AES.block_size)\n        cipher = AES.new(self.Key, AES.MODE_CBC, iv = self.IV)\n        return cipher.encrypt(padded_plain_bytes).hex()\n\n    def Decrypt(self, Ciphertext : str):\n        '''\n        Decrypt ciphertext and return corresponding plaintext.\n        Args:\n            Ciphertext: A hex string that will be decrypted.\n        Returns:\n            Plaintext string.\n        '''\n        cipher = AES.new(self.Key, AES.MODE_CBC, iv = self.IV)\n        padded_plain_bytes = cipher.decrypt(bytes.fromhex(Ciphertext))\n        \n        plain_bytes_length = int.from_bytes(padded_plain_bytes[0:4], 'little')\n        plain_bytes = padded_plain_bytes[4:4 + plain_bytes_length]\n        if len(plain_bytes) != plain_bytes_length:\n            raise ValueError('Invalid Ciphertext.')\n\n        plain_bytes_digest = padded_plain_bytes[4 + plain_bytes_length:4 + plain_bytes_length + SHA256.digest_size]\n        if len(plain_bytes_digest) != SHA256.digest_size:\n            raise ValueError('Invalid Ciphertext.')\n\n        if SHA256.new(plain_bytes).digest() != plain_bytes_digest:\n            raise ValueError('Invalid Ciphertext.')\n\n        return plain_bytes.decode('utf-8')\n\nif __name__ == '__main__':\n    import sys\n\n    def Help():\n        print('Usage:')\n        print('    SecureCRTCipher.py <enc|dec> [-v2] [-p ConfigPassphrase] <plaintext|ciphertext>')\n        print('')\n        print('    <enc|dec>              \"enc\" for encryption, \"dec\" for decryption.')\n        print('                           This parameter must be specified.')\n        print('')\n        print('    [-v2]                  Encrypt/Decrypt with \"Password V2\" algorithm.')\n        print('                           This parameter is optional.')\n        print('')\n        print('    [-p ConfigPassphrase]  The config passphrase that SecureCRT uses.')\n        print('                           This parameter is optional.')\n        print('')\n        print('    <plaintext|ciphertext> Plaintext string or ciphertext string.')\n        print('                           NOTICE: Ciphertext string must be a hex string.')\n        print('                           This parameter must be specified.')\n        print('')\n    \n    def EncryptionRoutine(UseV2 : bool, ConfigPassphrase : str, Plaintext : str):\n        try:\n            if UseV2:\n                print(SecureCRTCryptoV2(ConfigPassphrase).Encrypt(Plaintext))\n            else:\n                print(SecureCRTCrypto().Encrypt(Plaintext))\n            return True\n        except:\n            print('Error: Failed to encrypt.')\n            return False\n\n    def DecryptionRoutine(UseV2 : bool, ConfigPassphrase : str, Ciphertext : str):\n        try:\n            if UseV2:\n                print(SecureCRTCryptoV2(ConfigPassphrase).Decrypt(Ciphertext))\n            else:\n                print(SecureCRTCrypto().Decrypt(Ciphertext))\n            return True\n        except:\n            print('Error: Failed to decrypt.')\n            return False\n\n    def Main(argc : int, argv : list):\n        if 3 <= argc and argc <= 6:\n            bUseV2 = False\n            ConfigPassphrase = ''\n\n            if argv[1].lower() == 'enc':\n                bEncrypt = True\n            elif argv[1].lower() == 'dec':\n                bEncrypt = False\n            else:\n                Help()\n                return -1\n            \n            i = 2\n            while i < argc - 1:\n                if argv[i].lower() == '-v2':\n                    bUseV2 = True\n                    i += 1\n                elif argv[i].lower() == '-p' and i + 1 < argc - 1:\n                    ConfigPassphrase = argv[i + 1]\n                    i += 2\n                else:\n                    Help()\n                    return -1\n\n            if bUseV2 == False and len(ConfigPassphrase) != 0:\n                print('Error: ConfigPassphrase is not supported if \"-v2\" is not specified')\n                return -1\n\n            if bEncrypt:\n                return 0 if EncryptionRoutine(bUseV2, ConfigPassphrase, argv[-1]) else -1\n            else:\n                return 0 if DecryptionRoutine(bUseV2, ConfigPassphrase, argv[-1]) else -1\n        else:\n            Help()\n\n    exit(Main(len(sys.argv), sys.argv))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br"),e("span",{staticClass:"line-number"},[s._v("144")]),e("br"),e("span",{staticClass:"line-number"},[s._v("145")]),e("br"),e("span",{staticClass:"line-number"},[s._v("146")]),e("br"),e("span",{staticClass:"line-number"},[s._v("147")]),e("br"),e("span",{staticClass:"line-number"},[s._v("148")]),e("br"),e("span",{staticClass:"line-number"},[s._v("149")]),e("br"),e("span",{staticClass:"line-number"},[s._v("150")]),e("br"),e("span",{staticClass:"line-number"},[s._v("151")]),e("br"),e("span",{staticClass:"line-number"},[s._v("152")]),e("br"),e("span",{staticClass:"line-number"},[s._v("153")]),e("br"),e("span",{staticClass:"line-number"},[s._v("154")]),e("br"),e("span",{staticClass:"line-number"},[s._v("155")]),e("br"),e("span",{staticClass:"line-number"},[s._v("156")]),e("br"),e("span",{staticClass:"line-number"},[s._v("157")]),e("br"),e("span",{staticClass:"line-number"},[s._v("158")]),e("br"),e("span",{staticClass:"line-number"},[s._v("159")]),e("br"),e("span",{staticClass:"line-number"},[s._v("160")]),e("br"),e("span",{staticClass:"line-number"},[s._v("161")]),e("br"),e("span",{staticClass:"line-number"},[s._v("162")]),e("br"),e("span",{staticClass:"line-number"},[s._v("163")]),e("br"),e("span",{staticClass:"line-number"},[s._v("164")]),e("br"),e("span",{staticClass:"line-number"},[s._v("165")]),e("br"),e("span",{staticClass:"line-number"},[s._v("166")]),e("br"),e("span",{staticClass:"line-number"},[s._v("167")]),e("br"),e("span",{staticClass:"line-number"},[s._v("168")]),e("br"),e("span",{staticClass:"line-number"},[s._v("169")]),e("br"),e("span",{staticClass:"line-number"},[s._v("170")]),e("br"),e("span",{staticClass:"line-number"},[s._v("171")]),e("br"),e("span",{staticClass:"line-number"},[s._v("172")]),e("br"),e("span",{staticClass:"line-number"},[s._v("173")]),e("br"),e("span",{staticClass:"line-number"},[s._v("174")]),e("br"),e("span",{staticClass:"line-number"},[s._v("175")]),e("br"),e("span",{staticClass:"line-number"},[s._v("176")]),e("br"),e("span",{staticClass:"line-number"},[s._v("177")]),e("br"),e("span",{staticClass:"line-number"},[s._v("178")]),e("br"),e("span",{staticClass:"line-number"},[s._v("179")]),e("br"),e("span",{staticClass:"line-number"},[s._v("180")]),e("br"),e("span",{staticClass:"line-number"},[s._v("181")]),e("br"),e("span",{staticClass:"line-number"},[s._v("182")]),e("br"),e("span",{staticClass:"line-number"},[s._v("183")]),e("br"),e("span",{staticClass:"line-number"},[s._v("184")]),e("br"),e("span",{staticClass:"line-number"},[s._v("185")]),e("br"),e("span",{staticClass:"line-number"},[s._v("186")]),e("br"),e("span",{staticClass:"line-number"},[s._v("187")]),e("br"),e("span",{staticClass:"line-number"},[s._v("188")]),e("br"),e("span",{staticClass:"line-number"},[s._v("189")]),e("br"),e("span",{staticClass:"line-number"},[s._v("190")]),e("br"),e("span",{staticClass:"line-number"},[s._v("191")]),e("br"),e("span",{staticClass:"line-number"},[s._v("192")]),e("br"),e("span",{staticClass:"line-number"},[s._v("193")]),e("br"),e("span",{staticClass:"line-number"},[s._v("194")]),e("br"),e("span",{staticClass:"line-number"},[s._v("195")]),e("br"),e("span",{staticClass:"line-number"},[s._v("196")]),e("br"),e("span",{staticClass:"line-number"},[s._v("197")]),e("br"),e("span",{staticClass:"line-number"},[s._v("198")]),e("br")])]),e("h2",{attrs:{id:"三、解密"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、解密"}},[s._v("#")]),s._v(" 三、解密")]),s._v(" "),e("h3",{attrs:{id:"帮助信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#帮助信息"}},[s._v("#")]),s._v(" 帮助信息")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# python SecureCRTCipher.py\nUsage:\n    SecureCRTCipher.py <enc|dec> [-v2] [-p ConfigPassphrase] <plaintext|ciphertext>\n\n    <enc|dec>              "enc" for encryption, "dec" for decryption.\n                           This parameter must be specified.\n\n    [-v2]                  Encrypt/Decrypt with "Password V2" algorithm.\n                           This parameter is optional.\n\n    [-p ConfigPassphrase]  The config passphrase that SecureCRT uses.\n                           This parameter is optional.\n\n    <plaintext|ciphertext> Plaintext string or ciphertext string.\n                           NOTICE: Ciphertext string must be a hex string.\n                           This parameter must be specified.\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h3",{attrs:{id:"_1-如果ini配置文件是v2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-如果ini配置文件是v2"}},[s._v("#")]),s._v(" 1.如果ini配置文件是v2")]),s._v(" "),e("p",[s._v("执行命令行中执行python decrypt.py dec [-v2] 编码字符串")]),s._v(" "),e("p",[s._v("执行")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("python SecureCRTCipher.py dec -v2 加密串\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"_2-如果ini配置文件是"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-如果ini配置文件是"}},[s._v("#")]),s._v(" 2.如果ini配置文件是")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("python SecureCRTCipher.py dec  加密串\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("例如：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://imgoss.xgss.net/picgo/image-20221102133949379.png?aliyun",alt:"image-20221102133949379"}})]),s._v(" "),e("p",[s._v("解密成功。")])])}),[],!1,null,null,null);n.default=t.exports}}]);